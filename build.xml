<!--
# PromniCAT - Collection and Analysis of Business Process Models
# Copyright (C) 2012 Cindy FÃ¤hnrich, Tobias Hoppe, Andrina Mascher
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<project name="PromniCAT" default="help">
	<description>Builds the PromniCAT project.</description>
	
	<property file="build.properties"/>
	
	<!-- ================================= 
	          target: help              
	         ================================= -->
	<target name="help" description="Prints usage information.">
	<!--print usage message-->
		<echo message="Type 'ant full' to build the framework and execute the tests."/>
		<echo message="Type 'ant build' to only build the framework."/>
		<echo message="Type 'ant clean' to delete all generated resources"/>
		<echo message="Type 'ant doc' to create a Java-Doc for ${project.shortName}"/>
	</target>
	
	<!-- ================================= 
	          target: clean              
	         ================================= -->
	<target name="clean" description="Remove all generated files and folders.">
	<!--remove target folder-->
		<delete dir="${dir.build}"/>
		<delete dir="${dir.doc}"/>
		<delete>
			<fileset dir="${basedir}" includes="junit*.properties"/>
		</delete>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: prepare                      
         - - - - - - - - - - - - - - - - - -->
	<target name="prepare">
	<!--Create directories for generated files and copy test models to target directory.-->
		<mkdir dir="${dir.build}"/>
		<mkdir dir="${dir.build}/bin"/>
		<mkdir dir="${dir.testReports}"/>
		<mkdir dir="${dir.testReports}/promnicat"/>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: compile                      
         - - - - - - - - - - - - - - - - - -->
	<target name="compile" depends="prepare">
	<!--Compile all promnicat source code files.-->
		<javac srcdir="${dir.src}" destdir="${dir.build}/bin" includeantruntime="false" source="1.6" target="1.6" debug="on" nowarn="on">
			<classpath>
				<fileset dir="${dir.lib}" includes="**/*.jar"/>
				<fileset dir="${dir.build}" includes="*.jar"/>
			</classpath>
		</javac>
	</target>
	
	<!-- ================================= 
	          target: build              
	         ================================= -->
	<target name="build" depends="compile" description="Build a jar file of the framwork and include a manifest file">
	<!--Build a jar file of the framwork and include a manifest file-->
		<jar destfile="${dir.build}/${project.shortName}_${version}.jar" basedir="${dir.build}/bin" manifest="${dir.manifest}/MANIFEST.MF">
		</jar>
		<!--remove .class files -->
		<delete>
			<fileset dir="${dir.build}/bin" includes="*.class"/>
		</delete>
		<!-- Compile test files -->
		<javac srcdir="${dir.test}" destdir="${dir.build}/bin" includeantruntime="false" source="1.6" target="1.6" debug="on" nowarn="on">
			<classpath>
				<fileset dir="${dir.lib}" includes="**/*.jar"/>
				<fileset dir="${dir.build}" includes="*.jar"/>
			</classpath>
		</javac>
		<jar destfile="${dir.build}/${project.shortName}_Tests.jar" basedir="${dir.build}/bin"></jar>
		<delete dir="${dir.build}/bin"/>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: junit                      
         - - - - - - - - - - - - - - - - - -->
	<target name="junit" depends="build">
	<!--execute all tests-->
		<mkdir dir="${dir.testReports}/tmp"/>
		<!-- run PromniCAT test cases -->
		<condition property="runPromnicatTests">
			<istrue value="${run.promnicat.tests}"/>
		</condition>
		<antcall target="promnicatTests"/>
		<delete dir="${dir.testReports}/tmp"/>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: promnicatTests                      
         - - - - - - - - - - - - - - - - - -->
    <target name="promnicatTests" if="runPromnicatTests">
		<junit printsummary="yes" dir="${basedir}" tempdir="${dir.testReports}/tmp">
			<classpath>
				<fileset dir="${dir.build}" includes="**/*.jar"/>
				<fileset dir="${dir.lib}" includes="**/*.jar"/>
			</classpath>
			<batchtest fork="yes" todir="${dir.testReports}/promnicat">
				<fileset dir="${dir.test}" includes="**/*Test.java"/>
				<formatter type="xml" usefile="true"/>
			</batchtest>
		</junit>
    	<property name="createJunitReport" value="true"/>
    </target>
	
	<!-- ================================= 
	          target: full              
	         ================================= -->
	<target name="full" depends="clean,junit" description="Build the framework and execute all tests.">
		<!-- create junit report-->	
		<antcall target="junitReport"/>
		<!-- generate javadoc -->
		<condition property="createJavaDoc">
			<istrue value="${run.javadoc}"/>
		</condition>
		<antcall target="createJavaDoc"/>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: junitReport                      
         - - - - - - - - - - - - - - - - - -->
    <target name="junitReport" if="createJunitReport">
		<junitreport todir="${dir.testReports}">
			<fileset dir="${dir.testReports}" includes="**/TEST-*.xml"/>
			<report format="frames" todir="${dir.testReports}"/>
		</junitreport>
    </target>
	
	<!-- ================================= 
          target: doc              
         ================================= -->
    <target name="doc" depends="build" description="Creates a Java-Doc for ${project.fullName}">
    	<mkdir dir="${dir.doc}"/>
		<javadoc sourcepath="${dir.src}" destdir="${dir.doc}" author="true" version="true" use="true" windowtitle="${project.fullname}">
			<classpath>
				<fileset dir="${dir.lib}"/>
				<fileset dir="${dir.build}"/>
			</classpath>
			<doctitle><![CDATA[<h1>${project.fullName}</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2012 by ${author}</i>]]></bottom>
			<tag name="TODO" scope="all" description="To do:"/>
			<tag name="FIXME" scope="all" description="To fix:"/>
			<group title="Importer" packages="${javadoc.importer}"/>
			<group title="Persistence API" packages="${javadoc.persistenceApi}"/>
			<group title="OrientDB Database" packages="${javadoc.orientDB}"/>
			<group title="Utility Units" packages="${javadoc.utilityUnits}"/>
			<group title="Analysis Modules" packages="${javadoc.analysisModules}"/>
		</javadoc>
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: createJavaDoc                      
         - - - - - - - - - - - - - - - - - -->
    <target name="createJavaDoc" if="createJavaDoc">
    	<!-- just delegate -->
    	<antcall target="doc"/>
    </target>
	
</project>